{
	"name": "vscode-edit-csv",
	"displayName": "Edit csv",
	"description": "extension to edit csv files",
	"version": "0.0.10",
	"license": "MIT",
	"publisher": "janisdd",
	"engines": {
		"vscode": "^1.30.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"CSV"
	],
	"preview": true,
	"repository": {
		"type": "git",
		"url": "https://github.com/janisdd/vscode-edit-csv.git"
	},
	"bugs": {
		"url": "https://github.com/janisdd/vscode-edit-csv/issues"
	},
	"galleryBanner": {
		"color": "#687bff",
		"theme": "light"
	},
	"activationEvents": [
		"onCommand:edit-csv.edit",
		"onCommand:edit-csv.apply",
		"onCommand:edit-csv.applyAndSave"
	],
	"main": "./out/extension.js",
	"contributes": {
		"languages": [
			{
				"id": "csv",
				"extensions": [
					".csv"
				],
				"aliases": [
					"CSV"
				]
			},
			{
				"id": "tsv",
				"extensions": [
					".tsv",
					".tab"
				],
				"aliases": [
					"TSV"
				]
			}
		],
		"commands": [
			{
				"command": "edit-csv.edit",
				"category": "CSV",
				"title": "Edit as csv"
			},
			{
				"command": "edit-csv.goto-source",
				"category": "CSV",
				"title": "Go to csv source file"
			},
			{
				"command": "edit-csv.apply",
				"category": "CSV",
				"title": "Apply changes to source file"
			},
			{
				"command": "edit-csv.applyAndSave",
				"category": "CSV",
				"title": "Apply changes to source file and save"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"when": "resourceLangId == csv",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == tsv",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == CSV",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == TSV",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == 'CSV (semicolon)'",
					"command": "edit-csv.edit",
					"group": "navigation"
				}
			],
			"editor/title": [
				{
					"when": "editorLangId == csv && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "editorLangId == tsv && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "editorLangId == CSV && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "editorLangId == TSV && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "editorLangId == 'CSV (semicolon)' && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceScheme == csv-edit",
					"command": "edit-csv.goto-source",
					"group": "navigation"
				}
			],
			"editor/title/context": [
				{
					"when": "resourceLangId == csv && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == tsv && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == CSV && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == TSV && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				},
				{
					"when": "resourceLangId == 'CSV (semicolon)' && resourceScheme != csv-edit",
					"command": "edit-csv.edit",
					"group": "navigation"
				}
			]
		},
		"configuration": {
			"title": "Edit csv configuration",
			"type": "object",
			"properties": {
				"csv-edit.highlightCsvComments": {
					"type": "boolean",
					"default": true,
					"description": "true: the cell/row color is changed if the first cell is a comment, (might have negative impact on performance e.g. for large data sets), false: no additional highlighting (comments are still treated as comments)"
				},
				"csv-edit.lastRowEnterBehavior": {
					"type": "string",
					"default": "default",
					"description": "if one edits a cell in the last row and presses enter what the editor should do",
					"enum": [
						"default",
						"createRow"
					],
					"enumDescriptions": [
						"default of handsontable",
						"create a new row"
					]
				},
				"csv-edit.lastColumnTabBehavior": {
					"type": "string",
					"default": "default",
					"description": "if one edits a cell in the last column and presses tab what the editor should do",
					"enum": [
						"default",
						"createColumn"
					],
					"enumDescriptions": [
						"default of handsontable",
						"create a new column"
					]
				},
				"csv-edit.readOptionsAppearance": {
					"type": "string",
					"default": "collapsed",
					"description": "the appearance of the read option section",
					"enum": [
						"expanded",
						"collapsed"
					],
					"enumDescriptions": [
						"read options will always start expanded",
						"read options will always start collapsed"
					]
				},
				"csv-edit.writeOptionsAppearance": {
					"type": "string",
					"default": "collapsed",
					"description": "the appearance of the write option section",
					"enum": [
						"expanded",
						"collapsed"
					],
					"enumDescriptions": [
						"write options will always start expanded",
						"write options will always start collapsed"
					]
				},
				"csv-edit.previewOptionsAppearance": {
					"type": "string",
					"default": "collapsed",
					"description": "the appearance of the preview section",
					"enum": [
						"expanded",
						"collapsed"
					],
					"enumDescriptions": [
						"preview section will always start expanded",
						"preview section will always start collapsed"
					]
				},
				"csv-edit.readOption_hasHeader": {
					"type": "string",
					"default": "false",
					"description": "whether the first data line is a header line",
					"enum": [
						"true",
						"false"
					],
					"enumDescriptions": [
						"first row is the header row",
						"first row is a normal data row"
					]
				},
				"csv-edit.readOption_delimiter": {
					"type": "string",
					"default": "",
					"description": "the delimiter to use, empty string to auto detect"
				},
				"csv-edit.readOption_comment": {
					"type": "string",
					"default": "#",
					"description": "the string used as comment, empty string to thread every line as data line (no comments)"
				},
				"csv-edit.readOption_quoteChar": {
					"type": "string",
					"default": "\"",
					"description": "the string used to quote fields"
				},
				"csv-edit.readOption_escapeChar": {
					"type": "string",
					"default": "\"",
					"description": "the string used to escape the quote character within a field"
				},
				"csv-edit.writeOption_hasHeader": {
					"type": "string",
					"default": "false",
					"description": "whether the first data line is a header line",
					"enum": [
						"true",
						"false"
					],
					"enumDescriptions": [
						"first row is the header row",
						"first row is a normal data row"
					]
				},
				"csv-edit.writeOption_delimiter": {
					"type": "string",
					"default": "",
					"description": "the delimiter to use, empty string to auto detect"
				},
				"csv-edit.writeOption_comment": {
					"type": "string",
					"default": "#",
					"description": "the string used as comment, empty string to exclude comments"
				},
				"csv-edit.writeOption_quoteChar": {
					"type": "string",
					"default": "\"",
					"description": "the string used to quote fields"
				},
				"csv-edit.writeOption_escapeChar": {
					"type": "string",
					"default": "\"",
					"description": "the string used to escape the quote character within a field"
				},
				"csv-edit.doubleClickColumnHandleForcedWith": {
					"type": "number",
					"default": "200",
					"description": "normally the columns are auto sized, if we click on the handle when it has auto size then its with is set to this value (in px). Useful if we have a very wide column (wider than the screen and quickly want to shrink it)"
				},
				"csv-edit.openSourceFileAfterApply": {
					"type": "boolean",
					"default": false,
					"description": "true: opens the source file after apply, false: keep the editor displayed"
				},
				"csv-edit.selectTextAfterBeginEditCell": {
					"type": "boolean",
					"default": false,
					"description": "true: select the text inside the cell (note you can also select the cell and start typings to overwrite the cell value), false: cursor starts at the end of the text"
				},
				"csv-edit.quoteAllFields": {
					"type": "boolean",
					"default": false,
					"description": "true: to always quote fields, false: not (only if necessary)"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./ && tsc -p ./csvEditorHtml/tsconfig.json",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "npm run compile && node ./node_modules/vscode/bin/test",
		"lint": "npx tslint -p . && npx tslint -p ./csvEditorHtml/tsconfig.json"
	},
	"devDependencies": {
		"typescript": "^3.1.4",
		"vscode": "^1.1.25",
		"tslint": "^5.8.0",
		"@types/node": "^8.10.25",
		"@types/mocha": "^2.2.42"
	},
	"dependencies": {
		"@fortawesome/fontawesome-free": "^5.6.3",
		"@types/papaparse": "^4.5.6",
		"bulma": "^0.7.4",
		"bulma-extensions": "^4.0.1",
		"handsontable": "^6.2.2"
	}
}
